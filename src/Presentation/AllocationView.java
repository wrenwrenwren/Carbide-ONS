/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentation;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowSorter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author ren
 */
public class AllocationView extends javax.swing.JFrame {

    /**
     * Creates new form allocation_view
     */
    
    public String CurrAccType = "";
    
    public AllocationView(String accDBName) {
        initComponents();
        setCurrentAccType(accDBName);
        loadAccWeights(accDBName);
    }
    
    public void setCurrentAccType(String accDBName){
        CurrAccType = accDBName;
    }
    
    public String getCurrentAccType(){
        return(CurrAccType);
    }
    
    
    public void loadAccWeights(String accDBName){
        
        Object[][] AccInfo = null;
        Object[][] AccNameInfo = null;
                
        String[] columnNames = new String[4];
        columnNames[0] = "FCM";
        columnNames[1] = "Account";
        columnNames[2] = "Nominal";
        columnNames[3] = "Weights";
           
        MysqlConnect mysqldbconnect = new MysqlConnect();
        AccInfo = mysqldbconnect.queryAllocation(accDBName);
        
        MysqlConnect mysqldbconnect2 = new MysqlConnect();
        AccNameInfo = mysqldbconnect2.queryAccount(accDBName);
        
        int numAcc = AccInfo.length;
        int numAccName = AccNameInfo.length;

        if (numAccName == numAcc){
            
            jTable1.setModel(new javax.swing.table.DefaultTableModel(AccInfo, columnNames));
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            RowSorter<TableModel> sorter = new TableRowSorter<TableModel>(model);
            jTable1.setRowSorter(sorter); 
            
        } 
        
        else {
            int numCol = AccInfo[0].length;
            
            Object[][] newAccInfo = new Object[numAccName][numCol];
            
            for (int i = 0; i < numAccName; i++){
                newAccInfo[i][0] = AccNameInfo[i][0];
                newAccInfo[i][1] = AccNameInfo[i][1];
                String currAccinfoOne = (String) newAccInfo[i][0];
                String currAccinfoTwo = (String) newAccInfo[i][1];
               
                for (int j = 0; j < numAcc; j++){
                    String loopingAccinfoOne = (String) AccInfo[j][0];
                    String loopingAccinfoTwo = (String) AccInfo[j][1];
                    
                    if (loopingAccinfoOne.equals(currAccinfoOne) && loopingAccinfoTwo.equals(currAccinfoTwo)){
                        newAccInfo[i][2] = AccInfo[j][2];
                        newAccInfo[i][3] = AccInfo[j][3];
                    } else{
                        newAccInfo[i][2] = "";
                        newAccInfo[i][3] = "";
                    }
                }
            }
            
            jTable1.setModel(new javax.swing.table.DefaultTableModel(newAccInfo, columnNames));
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            RowSorter<TableModel> sorter = new TableRowSorter<TableModel>(model);
            jTable1.setRowSorter(sorter); 
            
            
        }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setCellSelectionEnabled(true);
        jTable1.setGridColor(new java.awt.Color(153, 153, 153));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Save To File");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Total Value:");

        jButton2.setText("Calculate");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 116, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(30, 30, 30))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Object[][] table_data = getTableData(jTable1);
        JFrame error_frame = new JFrame();
        Object[][] table_weights = new Object[table_data.length][4];
        float sum = 0;
        boolean close = false;
        
        outerloop:
        for(int row =0 ; row < table_data.length; ++row){
            for(int column =0; column<table_data[row].length - 1;++column){
                if (table_data[row][2] == "") {
                    JOptionPane.showMessageDialog(error_frame, "Please nominal values for calculation. It can't be NULL.", "Error in Calculation!",JOptionPane.ERROR_MESSAGE);
                    close = true;
                    break outerloop;
                } else {
                    table_weights[row][column] = table_data[row][column];
                }
            }
        }
        
        if (close) {
           super.dispose();
        }
        
        for(int row =0 ; row < table_weights.length; ++row){
            if (table_data[row][2] != ""){
                sum = sum + Float.valueOf((String) table_data[row][2]);
            } else {
                sum = 0;
            }
        }
        
        if (sum != 0) {
            for(int row =0 ; row < table_weights.length; ++row){
                float weights = Float.valueOf((String) table_weights[row][2]) / sum;
                table_weights[row][3] = String.valueOf(weights);
            }
        }
        
        String[] columnNames = new String[4];
        columnNames[0] = "FCM";
        columnNames[1] = "Account";
        columnNames[2] = "Nominal";
        columnNames[3] = "Weights";
                
        jTable1.setModel(new javax.swing.table.DefaultTableModel(table_weights, columnNames));
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        RowSorter<TableModel> sorter = new TableRowSorter<TableModel>(model);
        jTable1.setRowSorter(sorter); 
        jTextField1.setText(String.valueOf(sum));
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        String whichType = getCurrentAccType();
        Object[][] tableData = getTableData(jTable1);
        MysqlConnect mysqldbconnect = new MysqlConnect();
        mysqldbconnect.updateAllocation(whichType, tableData);

    }//GEN-LAST:event_jButton1ActionPerformed
    
    public Object[][] getTableData (JTable table) {
        
        DefaultTableModel dtm = (DefaultTableModel) table.getModel();
        int nRow = dtm.getRowCount(), nCol = dtm.getColumnCount();
        Object[][] tableData = new Object[nRow][nCol];
        
        for (int i = 0 ; i < nRow ; i++)
            for (int j = 0 ; j < nCol ; j++)
                tableData[i][j] = dtm.getValueAt(i,j);
        return tableData;
    
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
