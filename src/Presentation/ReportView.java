/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentation;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.RowSorter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
/**
 *
 * @author ren
 */
public class ReportView extends javax.swing.JFrame {

    /**
     * Creates new form report_view
     */
    public ReportView() throws IOException {
        initComponents();
        loadAllAccount();  
        loadDefaultTable();
    }
    
    
    public void loadAllAccount(){
        
        Object[][] singleAccName = null;
        MysqlConnect mysqldbconnect = new MysqlConnect();
        singleAccName = mysqldbconnect.getAccInEntries();
        
        ArrayList<String> indiAccName = new ArrayList<String>();
        indiAccName.add("ALL");
        indiAccName.add("Absolute");
        indiAccName.add("Hedge");

        for (int i=0; i<singleAccName.length; i++){
            indiAccName.add((String) singleAccName[i][0]);
        }
        
        String AccNames[] = indiAccName.toArray(new String[0]);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(AccNames));
    }
    
    public void loadDefaultTable(){
        
        Object[][] AllCombined = null;
        MysqlConnect mysqldbconnect = new MysqlConnect();
        AllCombined = mysqldbconnect.getAllCombined();
        
        String[] columnNames = new String[8];
        columnNames[0] = "Date";
        columnNames[1] = "Symbol";
        columnNames[2] = "Strike";
        columnNames[3] = "Type";
        columnNames[4] = "Expiry";
        columnNames[5] = "Month";
        columnNames[6] = "Amount";
        columnNames[7] = "Price";
        
        if (AllCombined != null){
            jTable1.setModel(new javax.swing.table.DefaultTableModel(AllCombined, columnNames));
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            RowSorter<TableModel> sorter = new TableRowSorter<TableModel>(model);
            jTable1.setRowSorter(sorter);
        } else {
            JFrame frame = new JFrame();
            JOptionPane.showMessageDialog(frame,
            "No Records/Table in DB!",
            "Error",
            JOptionPane.ERROR_MESSAGE);
            
            jTable1.setModel(new javax.swing.table.DefaultTableModel(null, columnNames));
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            RowSorter<TableModel> sorter = new TableRowSorter<TableModel>(model);
            jTable1.setRowSorter(sorter);
        }
    }
    
    public void loadOtherCombinedTable(String whichCombined){
        
        Object[][] otherCombined = null;
        
        if (whichCombined == "Absolute"){
            MysqlConnect mysqldbconnect = new MysqlConnect();
            otherCombined = mysqldbconnect.getAbCombined();
        } else if (whichCombined == "Hedge") {
            MysqlConnect mysqldbconnect = new MysqlConnect();
            otherCombined = mysqldbconnect.getHeCombined();
        }

        String[] columnNames = new String[9];
        columnNames[0] = "Date";
        columnNames[1] = "Symbol";
        columnNames[2] = "Strike";
        columnNames[3] = "Type";
        columnNames[4] = "Expiry";
        columnNames[5] = "Month";
        columnNames[6] = "Amount";
        columnNames[7] = "Price";
        columnNames[8] = "AccType";

        if (otherCombined != null){
            
            jTable1.setModel(new javax.swing.table.DefaultTableModel(otherCombined, columnNames));
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            RowSorter<TableModel> sorter = new TableRowSorter<TableModel>(model);
            jTable1.setRowSorter(sorter);
            
        } else {
            JFrame frame = new JFrame();
            JOptionPane.showMessageDialog(frame,
            "No Records/Table in DB!",
            "Error",
            JOptionPane.ERROR_MESSAGE);
            
            jTable1.setModel(new javax.swing.table.DefaultTableModel(null, columnNames));
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            RowSorter<TableModel> sorter = new TableRowSorter<TableModel>(model);
            jTable1.setRowSorter(sorter);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setGridColor(new java.awt.Color(153, 153, 153));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Clear");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 795, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        jComboBox1.setSelectedIndex(0);
        loadDefaultTable();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        String account_to_view = String.valueOf(jComboBox1.getSelectedItem());
        
        if (account_to_view.equals("ALL")) {
            loadDefaultTable();
        } else if(account_to_view.equals("Hedge")) {
            loadOtherCombinedTable("Hedge");
        } else if(account_to_view.equals("Absolute")) {
            loadOtherCombinedTable("Absolute");
        } else {
            loadSeparateData(account_to_view);
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    public void loadSeparateData(String accountToView){
        
        System.out.println(accountToView);
        
        Object[][] SeparateCombined = null;
        
        MysqlConnect mysqldbconnect = new MysqlConnect();
        SeparateCombined = mysqldbconnect.getSpecificCombined(accountToView);

        String[] columnNames = new String[9];
        columnNames[0] = "Date";
        columnNames[1] = "Symbol";
        columnNames[2] = "Strike";
        columnNames[3] = "Type";
        columnNames[4] = "Expiry";
        columnNames[5] = "Month";
        columnNames[6] = "Amount";
        columnNames[7] = "Price";
        columnNames[8] = "AccType";

        if (SeparateCombined != null){
            
            jTable1.setModel(new javax.swing.table.DefaultTableModel(SeparateCombined, columnNames));
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            RowSorter<TableModel> sorter = new TableRowSorter<TableModel>(model);
            jTable1.setRowSorter(sorter);
            
        } else {
            JFrame frame = new JFrame();
            JOptionPane.showMessageDialog(frame,
            "No Records/Table in DB!",
            "Error",
            JOptionPane.ERROR_MESSAGE);
            
            jTable1.setModel(new javax.swing.table.DefaultTableModel(null, columnNames));
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            RowSorter<TableModel> sorter = new TableRowSorter<TableModel>(model);
            jTable1.setRowSorter(sorter);
        }
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
